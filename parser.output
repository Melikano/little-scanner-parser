Terminals which are not used

   ERROR


Grammar

    0 $accept: prog $end

    1 prog: decl_list

    2 decl_list: decl decl_list
    3          | decl

    4 decl: ID COLON type EQ expr SEMICOLON

    5 type: INT
    6     | BOOL
    7     | ARRAY L_ANGLE type R_ANGLE

    8 expr: expr PLUS term
    9     | expr MINUS term
   10     | term

   11 term: term DIV factor
   12     | term MULT factor
   13     | factor

   14 factor: O_PAREN expr C_PAREN
   15       | NUM


Terminals, with rules where they appear

$end (0) 0
error (256)
R_ANGLE (258) 7
L_ANGLE (259) 7
ARRAY (260) 7
INT (261) 5
BOOL (262) 6
EQ (263) 4
COLON (264) 4
ID (265) 4
PLUS (266) 8
MINUS (267) 9
ERROR (268)
NUM (269) 15
DIV (270) 11
MULT (271) 12
O_PAREN (272) 14
C_PAREN (273) 14
SEMICOLON (274) 4


Nonterminals, with rules where they appear

$accept (20)
    on left: 0
prog (21)
    on left: 1, on right: 0
decl_list (22)
    on left: 2 3, on right: 1 2
decl (23)
    on left: 4, on right: 2 3
type (24)
    on left: 5 6 7, on right: 4 7
expr (25)
    on left: 8 9 10, on right: 4 8 9 14
term (26)
    on left: 11 12 13, on right: 8 9 10 11 12
factor (27)
    on left: 14 15, on right: 11 12 13


state 0

    0 $accept: . prog $end

    ID  shift, and go to state 1

    prog       go to state 2
    decl_list  go to state 3
    decl       go to state 4


state 1

    4 decl: ID . COLON type EQ expr SEMICOLON

    COLON  shift, and go to state 5


state 2

    0 $accept: prog . $end

    $end  shift, and go to state 6


state 3

    1 prog: decl_list .

    $default  reduce using rule 1 (prog)


state 4

    2 decl_list: decl . decl_list
    3          | decl .

    ID  shift, and go to state 1

    $default  reduce using rule 3 (decl_list)

    decl_list  go to state 7
    decl       go to state 4


state 5

    4 decl: ID COLON . type EQ expr SEMICOLON

    ARRAY  shift, and go to state 8
    INT    shift, and go to state 9
    BOOL   shift, and go to state 10

    type  go to state 11


state 6

    0 $accept: prog $end .

    $default  accept


state 7

    2 decl_list: decl decl_list .

    $default  reduce using rule 2 (decl_list)


state 8

    7 type: ARRAY . L_ANGLE type R_ANGLE

    L_ANGLE  shift, and go to state 12


state 9

    5 type: INT .

    $default  reduce using rule 5 (type)


state 10

    6 type: BOOL .

    $default  reduce using rule 6 (type)


state 11

    4 decl: ID COLON type . EQ expr SEMICOLON

    EQ  shift, and go to state 13


state 12

    7 type: ARRAY L_ANGLE . type R_ANGLE

    ARRAY  shift, and go to state 8
    INT    shift, and go to state 9
    BOOL   shift, and go to state 10

    type  go to state 14


state 13

    4 decl: ID COLON type EQ . expr SEMICOLON

    NUM      shift, and go to state 15
    O_PAREN  shift, and go to state 16

    expr    go to state 17
    term    go to state 18
    factor  go to state 19


state 14

    7 type: ARRAY L_ANGLE type . R_ANGLE

    R_ANGLE  shift, and go to state 20


state 15

   15 factor: NUM .

    $default  reduce using rule 15 (factor)


state 16

   14 factor: O_PAREN . expr C_PAREN

    NUM      shift, and go to state 15
    O_PAREN  shift, and go to state 16

    expr    go to state 21
    term    go to state 18
    factor  go to state 19


state 17

    4 decl: ID COLON type EQ expr . SEMICOLON
    8 expr: expr . PLUS term
    9     | expr . MINUS term

    PLUS       shift, and go to state 22
    MINUS      shift, and go to state 23
    SEMICOLON  shift, and go to state 24


state 18

   10 expr: term .
   11 term: term . DIV factor
   12     | term . MULT factor

    DIV   shift, and go to state 25
    MULT  shift, and go to state 26

    $default  reduce using rule 10 (expr)


state 19

   13 term: factor .

    $default  reduce using rule 13 (term)


state 20

    7 type: ARRAY L_ANGLE type R_ANGLE .

    $default  reduce using rule 7 (type)


state 21

    8 expr: expr . PLUS term
    9     | expr . MINUS term
   14 factor: O_PAREN expr . C_PAREN

    PLUS     shift, and go to state 22
    MINUS    shift, and go to state 23
    C_PAREN  shift, and go to state 27


state 22

    8 expr: expr PLUS . term

    NUM      shift, and go to state 15
    O_PAREN  shift, and go to state 16

    term    go to state 28
    factor  go to state 19


state 23

    9 expr: expr MINUS . term

    NUM      shift, and go to state 15
    O_PAREN  shift, and go to state 16

    term    go to state 29
    factor  go to state 19


state 24

    4 decl: ID COLON type EQ expr SEMICOLON .

    $default  reduce using rule 4 (decl)


state 25

   11 term: term DIV . factor

    NUM      shift, and go to state 15
    O_PAREN  shift, and go to state 16

    factor  go to state 30


state 26

   12 term: term MULT . factor

    NUM      shift, and go to state 15
    O_PAREN  shift, and go to state 16

    factor  go to state 31


state 27

   14 factor: O_PAREN expr C_PAREN .

    $default  reduce using rule 14 (factor)


state 28

    8 expr: expr PLUS term .
   11 term: term . DIV factor
   12     | term . MULT factor

    DIV   shift, and go to state 25
    MULT  shift, and go to state 26

    $default  reduce using rule 8 (expr)


state 29

    9 expr: expr MINUS term .
   11 term: term . DIV factor
   12     | term . MULT factor

    DIV   shift, and go to state 25
    MULT  shift, and go to state 26

    $default  reduce using rule 9 (expr)


state 30

   11 term: term DIV factor .

    $default  reduce using rule 11 (term)


state 31

   12 term: term MULT factor .

    $default  reduce using rule 12 (term)
